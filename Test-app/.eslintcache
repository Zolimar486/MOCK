[{"C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\index.js":"1","C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\App.js":"2","C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\Components\\Navbar.jsx":"3","C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\Pages\\Home.jsx":"4","C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\Components\\Post.jsx":"5","C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\Pages\\Single.jsx":"6","C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\Components\\Header.jsx":"7","C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\Pages\\Write.jsx":"8"},{"size":433,"mtime":1631060197193,"results":"9","hashOfConfig":"10"},{"size":620,"mtime":1674697792578,"results":"11","hashOfConfig":"10"},{"size":2967,"mtime":1673901442647,"results":"12","hashOfConfig":"10"},{"size":355,"mtime":1674693139316,"results":"13","hashOfConfig":"10"},{"size":1646,"mtime":1674768971529,"results":"14","hashOfConfig":"10"},{"size":3730,"mtime":1674858169542,"results":"15","hashOfConfig":"10"},{"size":414,"mtime":1674676917632,"results":"16","hashOfConfig":"10"},{"size":2716,"mtime":1674762800885,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"jr2tu8",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\index.js",[],["37","38"],"C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\App.js",[],"C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\Components\\Navbar.jsx",["39"],"import styled from 'styled-components'\r\nimport {BsLinkedin} from 'react-icons/bs'\r\nimport {BsGithub} from 'react-icons/bs'\r\nimport {CgMail} from 'react-icons/cg'\r\nimport {AiOutlineCloseCircle} from 'react-icons/ai'\r\nimport {CgMenuGridO} from 'react-icons/cg'\r\nimport {useState}from 'react'\r\n\r\nconst Container = styled.div`\r\nwidth:100%;\r\nheight:50px;\r\npadding:1rem;\r\nz-index:999;\r\nbackground-color:white;\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:space-between;\r\n\r\n`\r\n\r\nconst Wrapper = styled.div``\r\n\r\nconst Left = styled.div`\r\ndisplay:flex;\r\n`\r\n\r\nconst Icons  = styled.div`\r\nfont-size:18px;\r\nmargin:0px 5px;\r\n\r\n`\r\n\r\nconst Right = styled.div`\r\n\r\n\r\n@media only screen and (max-width:768px){\r\n    width:100%;\r\n    height:max-content;\r\n    position:absolute;\r\n    top:0;\r\n    left:${({isOpen})=>(isOpen ? \"0px\" : \"-500%\")};\r\n    transition: .3s;\r\n    background-color:lightcoral;\r\n    z-index:999;\r\n    padding:1rem;\r\n}\r\n`\r\n\r\nconst List= styled.ul`\r\nlist-style:none;\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:space-between;\r\n\r\n\r\n@media only screen and  (max-width:768px){\r\n    display:flex; \r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n\r\n}\r\n`\r\n\r\nconst ListItems = styled.li`\r\nmargin:0px 5px;\r\n\r\n@media only screen and (max-width:768px){\r\n    margin-bottom:6px;\r\n}\r\n\r\n\r\n`\r\n\r\nconst Btns = styled.div`\r\nmargin:0px 8px;\r\n\r\n@media only screen and (max-width:768px){\r\n    margin:5px 0px;\r\n}\r\n`\r\n\r\n\r\nconst Image = styled.img`\r\nwidth:30px;\r\nheight:30px;\r\nborder-radius:50%;\r\nobject-fit:cover;\r\n`\r\n\r\n\r\nconst Close = styled.div`\r\ndisplay:none;\r\n\r\n@media only screen and (max-width:768px){\r\n    display:block;\r\n    position:absolute;\r\n    top:10px;\r\n    right:15px;\r\n    font-size:25px;\r\n\r\n}\r\n`\r\n\r\nconst Burguer = styled.div`\r\ndisplay:none;\r\n\r\n@media only screen and (max-width:768px){\r\n   display:block;\r\n   font-size:24px;\r\n\r\n}\r\n`\r\n\r\n\r\nexport default function Navbar(){\r\n     \r\n    const [isOpen ,  setIsOpen] = useState(false)\r\n\r\n    return(\r\n        <Container>\r\n            <Left>\r\n                <Icons><BsLinkedin/></Icons>\r\n                <Icons><BsGithub/></Icons>\r\n                <Icons><CgMail/></Icons>\r\n            </Left>\r\n            <Right isOpen={isOpen}>\r\n                <List>\r\n                    <ListItems>Home</ListItems>\r\n                    <ListItems>About</ListItems>\r\n                    <ListItems>Quiz</ListItems>\r\n                    <ListItems>LogOut</ListItems>\r\n                    <Btns>\r\n                        <Image src=\"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&w=300\"/>\r\n\r\n                    </Btns>\r\n                </List>\r\n                <Close  >\r\n                    <AiOutlineCloseCircle onClick={(e) => setIsOpen(!isOpen)} />\r\n                </Close>\r\n            </Right>\r\n            <Burguer >\r\n            <CgMenuGridO onClick={(e) => setIsOpen(!isOpen)} />\r\n            </Burguer>\r\n        </Container>\r\n    )\r\n}","C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\Pages\\Home.jsx",[],"C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\Components\\Post.jsx",[],"C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\Pages\\Single.jsx",[],"C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\Components\\Header.jsx",[],"C:\\Users\\Gilberto\\Desktop\\Blog's Recall\\Test-app\\src\\Pages\\Write.jsx",["40"],"import styled from 'styled-components'\r\nimport {RiUploadCloudLine} from 'react-icons/ri'\r\nimport {useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Container = styled.div`\r\nmargin:10px 120px;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\npadding:10px;\r\n`\r\n\r\nconst Image = styled.img`\r\nwidth:100%;\r\nheight:280px;\r\n`\r\nconst Span= styled.span``\r\n\r\nconst Form = styled.form``\r\n\r\nconst Section = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\n\r\n`\r\n\r\nconst Label = styled.label`\r\n\r\n\r\n`\r\n\r\nconst Input = styled.input`\r\nmargin: 0px 5px;\r\npadding:20px;\r\nborder:none;\r\noutline:none;\r\nborder-bottom:1px solid gray;\r\nfont-size:30px;\r\ncolor:gray;\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\npadding:20px;\r\nborder:none;\r\noutline:none;\r\nborder-bottom:1px solid gray;\r\nfont-size:25px;\r\ncolor:gray;\r\nmargin:5px 0px;\r\n`\r\n\r\nconst Div= styled.div``\r\n\r\nconst Button = styled.button`\r\nmargin-top:20px;\r\nbackground-color:lightcoral;\r\npadding: .4rem 1.4rem;\r\nborder:none;\r\nborder-radius:10px;\r\ncolor:white;\r\n`\r\n\r\nexport default function Write(){\r\n       \r\n    const [postImg, setPostImg] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\")\r\n    \r\n\r\n    const handleImageUpload = (e)=> {\r\n       const file = e.target.files[0]\r\n       \r\n       TransformFile(file)\r\n    }\r\n\r\n    const TransformFile = (file) => {\r\n       const reader = new FileReader()\r\n\r\n       if(file){\r\n         reader.readAsDataURL(file)\r\n         reader.onloadend = () => {\r\n          setPostImg(reader.result)\r\n          }\r\n        }else{\r\n          setPostImg(\"\")\r\n        }\r\n    }\r\n\r\n    const handleSubmit= async(e)=> {\r\n      e.preventDefault()\r\n\r\n\r\n      try{\r\n        const res = await axios.post('http://localhost:5000/api/post/', {\r\n          title,\r\n          image :postImg\r\n        })\r\n\r\n      window.location.replace('/post/' + res.data._id )\r\n\r\n      }catch(err){}\r\n\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Wrapper>\r\n               {postImg ? (\r\n                 <Image src={postImg}/>\r\n               ) : (<Span>Preview will appear</Span>)}\r\n                <Form onSubmit={handleSubmit}>\r\n                <Section>\r\n                  <Label htmlFor=\"file\">\r\n                    <RiUploadCloudLine style ={{fontSize:\"30px\"}}/>\r\n                    </Label>\r\n                  <Input type=\"file\" id=\"file\" accept='image/' style={{display:\"none\"}} onChange ={handleImageUpload}/>\r\n                  <Input type=\"text\" placeholder=\"title\" onChange={(e) => setTitle(e.target.value)}/>\r\n\r\n                </Section>\r\n                 \r\n                 <Div>\r\n                 <Button type=\"submit\">Create</Button>\r\n                 </Div>\r\n                </Form>\r\n                \r\n            </Wrapper>\r\n        </Container>\r\n    )\r\n}",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":21,"column":7,"nodeType":"47","messageId":"48","endLine":21,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":43,"column":7,"nodeType":"47","messageId":"48","endLine":43,"endColumn":15},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Wrapper' is assigned a value but never used.","Identifier","unusedVar","'TextArea' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]